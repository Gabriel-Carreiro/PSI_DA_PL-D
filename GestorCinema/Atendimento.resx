<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LugarButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOwAAADVCAMAAABjeOxDAAAABGdBTUEAALGPC/xhBQAAAVZQTFRF////
        5khHxjAxKysrICIhMzMzGRkZQEJBAAAAJicnyzAxNDMwMzM1cjM0KjM2JCQkLy8v6+vrXV1d8fHxzMzM
        Dw8P+v//0EVG6UZGABMPOEE4FhYWFxoXoDg3ABcY5UpM30FA19fXnp6e5D08Ozs71jw6dnZ2f4GAxC4q
        9L2z2Dw6w8PD+ujk//v/40pF6UZK6MG6qKiokZGRwjMyHComZmZmSEhI+vjz/P/79tfV7q+s5I6N4G9y
        3lRY4Dk/9+Pg7pOM111Y12dj42Vp7j092YV95UU66aus4HqA6vPox0FMzicqznV4ylNcwhgV1ZSR1XJu
        5ouO57+69JyW6aap7b288tHQ6zgw6pud4dPO6IaASjo0h5eW4KKjuZiToHZ0omNjolRWmz5EHRYciiYu
        WyIgLxkZqDEvAR0dcykkQB0YQSstuzM5oS8yFTAxXC0qeS41ZzU4qSrrRwAAC/9JREFUeF7tnftj00YS
        xx05cRzxMIljRdSA5MhydH7I2GlihyROQ0zgmrsrcE0aoNy1BQ4o4cr9/7/crDS2tSv5kUSOdqk+pcYP
        ebRfzezu7EMmERMTExMTExMTExMTExMTExMTE/O1UEu08dnXiJJQaPD9r5JWq1XtAy++Pse228Sj2a0H
        2zu7nY5hkP/hodPRd3e2j/fIhzXwOB4tNArUTKW99d2+bugz6gxNXe/oDx9UyfWo4fFCA25tnxzougrM
        2CgSqYP6ump0H+2RyoxfEJm2srVjHIJSG0CRPeq2DW+rWtc4rUIoCw5x2GNNR20jMHZPRHetUlNaL40u
        69AAwLmP4dIIjbK3b0CcoqJR2DPdRy1x1dYghqu70AJPohWwjR1QC98SESh49WBSpYA6oz8RN5Jrf/3+
        yNRQygTUO0d/EzWSa+2/W5JsopIJkNblf/wgpFiosD9YpilJE6pVZ8iVKR89F68HUqDTOelAujAjWxOq
        tSxT0+qHWla4eks6WGycJGuCnGKGXBTQWrc72+I1UkriuYG5hCxP0EiZ/QDQq+LljcpBv9OZpJGyzF6a
        ZZyKV2u3ulh48JWMT4ZjWvgE0IXrfpQnh1h2yHvHutYmQdyLhO59tCEMWc2uY+HBVx6/BVE3Pb7Xuk9F
        8+x9w5snjnOt7G2wVb0qmNonet0zsLOtkSmyKQ+igLj2MRoRA6W6Qk83jXYt7Vi7+1SkCam2Qkcx1FoJ
        nwShy9To3jZWhIpj5TsDS45oo8SW+30s0jlWBFoqaGvMPKJmlvFZALRj4WDjGaSbaIp3lPYe49iRiYXt
        +0jdFcevivJ4kD71GC7W9Dde5S00xT9tZcff05hDxz5sjQW6UGkFoaZo3n7TRR9aaQN8rj8RZzDgr7LA
        ULFBH6ygJf5RjgeDgAHDxOoB8W0be2iLe5RnQWKH1dmg9+3ufVHCuL0btAbgE0VW9YBAsZ1HooitQmmx
        1BS6A1nMI7ivgoKYDG0foi3uOTHUALGgStfLJoUjNUCuamtZNMY7P+oBYRzsQkJQy1U3XggRx4ryJMix
        wzOogB7YrhvHaI5vlNZ+XfN5tjxiQOu/Dnb9cBvNcY2SqOoBYoc7NuhCgNgDtMc17doL/yhA00fOVEgB
        s+haCw3yjKI88CeLGjXx4kMK+LSzJ0ALpSjPAjLj0SsgWkCQd58r/A9qlcQuFtdDwJCVIuBa6P8UYq9Q
        gDArMKPqUw+4GPqOAGFcCxjflUe1xYSASRtVE2BIq0CyiOXtM34Zz9+AqYYA61vKj4esWI2dPvTjj2PV
        EKA5DmiMzfFi/UtfqiHAPJRy4Bu5ywFTagy2by+CWj7lX2zbu6DloE2yqUL2bZhSX/Ivtuob8ngXX4fi
        P0gXIDve8jXG8iRifXEM43f+s+NjVuyYvBjxbUVQbZ375lh5bTCVNijx9aOxcazOGCfcV9ptVuxEVZbE
        MT5BVE2AyYqdQ2bpY3z65KAx4zxV675Gk7yitHa7nm0ygC2ZM84bZPrUnWJ1J4zhkard7EWpG8/QKLdk
        NZXuME2y2VTXdTq2+69w+thfaVVN30Gb3OIb85gyIMF/PUwT/sADvnCUAppOdz6qZu9y1/f0B2JkZ4CS
        OGEnoJzoJM5zZsVNs1x2BDrC6Big9+pCbmKDWE+DHHnbDFL7d0sqtVo78ZzxLNvujECWqFUT29n8BYbd
        ExDcc0aGUr1//BeXPShV2zfbNnJPEI1JiQXPGmSzgdI+wRMcn0Qc1scrPx0ahI7ReQ1u8O0JAgWTAteF
        EfsctLZ2HPuEn/YjXLVVEi1PjKplyHjY3RTjN6R6YCPeeAyhcnqo9au2cRDllqGTLuktXewuGYDuM2In
        2zPvwt47YZzCKQ4ObTwB0Inu7mIl8aKuDVBP4R26Ox27+ZbClx6/BIMHmvccEdbawuarbwYU5yuJFltl
        zyWWTY8fKomf5+bn0T7waiO6ZdtVKImHYskvdrJRgAuTVsyo+0p2E20jyQKe+upZLWIZXEAsm0Cdp33y
        Ha3aCVbsHE9iTxixk96v5eBrusstfsXOJ39mdkDpk+dPBMihKMrVpW/QNMKR2GL6Ne3Z8uQpBYHNQPR/
        pdFyD67EbtPjADNomXk4bG6p/juHlntwJfYp7dmJ7kzzwM5W/HIPLffgSuxDbwKlMqO2sWhMe6b+eo85
        A09ic1S2CGLL9E0gY/CJ/Y1nz+a+p7TpliWb5UkaZHc4r0nM1AxPYht0BjU/d3uFEmtaLjgng3MVXtz3
        cOLCSRgpA3c5ErtYJGA5gIxPrLMf0xHEQnzpTDh6YcSqd+9dQ9MAnOrWBp45ChabpdLGXI9MihHrrvLU
        62QqFR7hb+dhOKalM2LvJItFNF8qlVbxvJGxnM4jKUasNtGSlhedab5BLNrO59N4vkhZTqf6MGKZ9mY8
        5D5arwUQi5ZTKd7Fnm/MAzBiSRijZf7FnmvM42DJonpWP79YppYLJNY83wCPQIsVKYwvIpaehvq6xZqS
        9/YCgTxbP8dqQA9arECerbOzLBNgSqaYnvVNKU0ALVakOnsxsfjMQSCx584WWbEihbEkDb8deggCe5Ye
        tJMRbP+2QxdN6412y+74nU66BPNsb6MIma+QZUmChwGuTGoMD2I9412hxPbrLE6oaoN15SHoVD3nWuyd
        2ytYTAdfAzV6moJgCiQ2t0929Ohlgm5K0vmmyAH4Tu/rYEj97TbPYfxUhUoqDSC7usbGrrO/D9oqqOD4
        NQLUafWXe2gY4E5s7qGFRaUAxcz2AxpGZh/rV249e+fN7bfrgYVGiJdRHkK8iR8GsS69A9eiXr7Evrn9
        bj3QsV5ID9Rn3NGydfaffhPFWRjfeS/L61jOUJCto7f5O29c63yJ/fA7xF2orMvrZyiVN7H3Po6qsBfl
        dz7rbO7uFMTKXz6gec7Evp+G2Lcf3EDmYfkjW2nmZpGQa6yD9f5DxrWer1TwnFHRSOdTSeQali9czr5F
        88l8LsL9bUAljQUhfMLihYp1toDmgYXUIp44CpYyWAzCp3A7WRdKbDLVxBNHQHYOC+EwFbHyIIyBzBKe
        OQIWb2EhHGKxl8XiVSyWL1w4FZucRj/Lq9iFaYhd/8yn2G/PsIBhIt/9E4k9+ujtZzkS+xkLGCbyl5to
        nsCP2P9+nsao5x2fYhduHGEJQ0T+hNYd+BGb/GMKnl1H2y4cif00hb6HGgfwJPbaWegJo0x1szyJTb4P
        udJa0tFbXj27cFeG8oWItS7f4FXszY+STK02X5r1oz94FZt8dePLjVD58r9raNqFI7FzN69fvxkmYO06
        NRnCk9hrU4BbsXNz10MGTKJxB77ETgE07hCLvSJisWGDxh1isVcEK5Y0nqGDxh04EgvZcejQZ+BLrLuU
        Gh5UZsyZ2CQuHIcFo5UzsUksZTiwWnkTm5xNYUkvTd67+OvCmdiFjaX+HovLkS4V0eYA3sK4lFhKY3Ev
        RbqZoHodB/7EJtbSlw7lfL6SyPqtcyg2USmmc7n8BRWn8rl0eonsFBHCs8ByY21jczbtIefBuYcdnwN4
        hMvCZqnZcLcAiSK2R3axUFiuVCqNRmO12WyuOZQI7lN4b3UVPoRDlguFRfpHy0QTeylisZExXbGctcbZ
        OV9CN7uGn4VA0Z8uRvlzK9R2PodcAz8KgdIsGu2TivL3VgppRm1qEz8Jg0KKsT6bjPSfBqzMQ3+Jm3AX
        8rnZcH/xsrCZz+Vd40lyHifViJJCodBw95IXoaPEN0MDemnXeAa64Uh3G/coOL8blJvHl+GSdX+UaJaX
        f9vyTyc2lcqF2TYNyJIwBrH4MmKylY3ZhQyk8/nGFNqPQpMMIZILmbVlfCdCKqVUDrrDBXfIshmu3kIz
        45jNQWucyiWbUbZQ2eW12Zw7K4ZigaWw9C4259GkIxbOkUoXo9K7vFbMpXoJ3UAssNS4dGtSWN1EYwRX
        LJCBlmH1yvUurt3KpzKD3JUSCyxdqoY1+j516YsFMqnU/OrVNs2VdAbXJxySbt3ycKnxAHvpQCyeyCGT
        v9pMqkJNswBYrD6XEkvN5xDwJD3SVys2kR0HHnch0MRw8LiYmJiYmJiYmJiYmJiYmJiYmBi+SCT+D0FL
        7L9gdcqlAAAAAElFTkSuQmCC
</value>
  </data>
</root>